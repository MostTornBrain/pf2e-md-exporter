{{!-- This handlebar is a modified version of one from Josh P.  It will handle Loot actors exported from Foundry.  It relies on two modules, PF2E Exporter and More Handlebars Helpers. --}}
{{!-- me-debugDumpObject "Loot JSON" --}}
---
title: "{{{name}}}"
obsidianUIMode: preview
noteType: pf2eLoot
cssClasses: pf2e
aliases: "{{{uuid}}}" 
tags:
{{#each system.traits.value}}  - pf2e/loot/type/{{this}}
  {{/each}}
  - pf2e/loot/level/{{system.details.level.value}}
{{#if system.details.publication.remaster}}
  - remaster
{{/if~}}
name: "{{name}}"
level: {{system.details.level.value}}
license: {{system.details.publication.license}}
---

```statblock
columns: 2
forcecolumns: true
layout: Basic Pathfinder 2e Layout
{{#if this.img_path}}token: {{this.img_path}}
{{/if}}source: "{{system.details.publication.title}}"
name: "{{{name}}}"
level: "Loot"
{{#if (eq system.traits.rarity "common")}}{{else}}rare_03: [[{{capitalize system.traits.rarity}}]]{{/if}}
alignment: "{{more-handlebars-helpers-table system.details.alignment.value "LG" "Lawful Good" "LN" "Lawful Neutral" "LE" "Lawful Evil" "NG" "Neutral Good" "N" "Neutral" "NE" "Neutral Evil" "CG" "Chaotic Good" "CN" "Chaotic Neutral" "CE" "Chaotic Evil"}}"
size: "{{more-handlebars-helpers-table system.traits.size.value "ti" "Tiny" "sm" "Small" "med" "Medium" "lg" "Large" "hu" "Huge" "ga" "Gargantuan"}}"
{{#each system.traits.value as |trait index|}}
trait_0{{add index 1}}: [[{{trait}}]]
{{/each}} 
sourcebook: "_{{system.details.publication.title}}_"
abilities_top:
  - name: ""
{{#if (me-equipmentList items)}}
  - name: "Items"
    desc: "{{#each (me-equipmentList items)}}{{{this}}}{{ifThen @last '' ', '}}{{/each}}"
{{~/if}}
{{#each items}}{{#if (eq system.category "interaction")}}{{#if (or (me-HTMLtoYAML system.description.value this) system.actions.value)}}
  - name: "{{#if flags.core.sourceId}}[[{{flags.core.sourceId}}|{{{name}}}]]{{else}}{{{name}}}{{/if}}"
    desc: "{{#if system.actions.value}}{{{more-handlebars-helpers-table system.actions.value "1" "`pf2:1`" "2" "`pf2:2`" "3" "`pf2:3`" "reaction" "`pf2:r`" "free" "`pf2:0`"}}}{{/if}} {{#if system.traits.value}}({{system.traits.value}}){{/if}} {{{me-HTMLtoYAML system.description.value this}}}"
{{/if}}{{/if}}{{/each}}
abilities_mid:
  - name: ""
{{~#each items}}{{#if (eq system.category "defensive")}}{{#if (or (me-HTMLtoYAML system.description.value this) (or system.actions.value (and system.actionType.value (ne system.actionType.value "passive"))))}}
  - name: "{{#if flags.core.sourceId}}[[{{flags.core.sourceId}}|{{{name}}}]]{{else}}{{{name}}}{{/if}}"
    desc: "{{#if system.actions.value}}{{{more-handlebars-helpers-table system.actions.value "1" "`pf2:1`" "2" "`pf2:2`" "3" "`pf2:3`" "reaction" "`pf2:r`" "free" "`pf2:0`"}}}{{else}}{{#if system.actionType.value}}{{#if (eq system.actionType.value "passive")}}{{else}}{{{more-handlebars-helpers-table system.actionType.value "1" "`pf2:1`" "2" "`pf2:2`" "3" "`pf2:3`" "reaction" "`pf2:r`" "free" "`pf2:0`"}}}{{/if}}{{/if}}{{/if}} {{#if system.traits.value}}({{system.traits.value}}){{/if}} {{{me-HTMLtoYAML system.description.value this}}}"
{{/if}}{{/if}}{{/each}}
attacks:
  - name: ""
{{#each items as |item|}}{{#if (eq item.type "spellcastingEntry")}}
  - name: "{{item.name}}"
    desc: "{{#if (eq item.system.prepared.value 'focus')}}{{@root.system.resources.focus.value}} Focus Point{{#if (gt @root.system.resources.focus.value 1)}}s{{/if}}, {{/if}}DC {{item.system.spelldc.dc}}, attack {{numberFormat item.system.spelldc.value sign=true}}
    {{~#each (me-spellLevels @root.items item.id 'spells') as |level|}}; __{{ordinal level}} __ {{me-getSpellSlotCount item level}} {{#each (me-getSpellList @root.items item.id level 'spells')}}_{{{this}}}_{{ifThen @last '' ', '}}{{/each}}{{/each}}
    {{~#if (me-spellLevels @root.items item.id 'cantrips')}}\n__Cantrips__ {{#each (me-spellLevels @root.items item.id 'cantrips') as |level|}} __({{ordinal level}})__ {{#each (me-getSpellList @root.items item.id level 'cantrips')}}_{{{this}}}_{{#if system.location.uses.value}} (x{{system.location.uses.value}}){{/if}}{{ifThen @last '' ', '}}{{/each}}{{/each}}{{/if}}
    {{~#if (me-spellLevels @root.items item.id 'constant')}}\n__Constant__ {{#each (me-spellLevels @root.items item.id 'constant') as |level|}} __({{ordinal level}})__ {{#each (me-getSpellList @root.items item.id level 'constant')}}_{{{this}}}_{{#if system.location.uses.value}} (x{{system.location.uses.value}}){{/if}}{{ifThen @last '' ', '}}{{/each}}{{/each}}{{/if}}"
{{/if}}{{/each}}{{#if (me-getRituals items)}}
  - name: "Rituals"
    desc: "{{#each (me-getRituals items)}}_{{{this}}}_{{ifThen @last '' ', '}}{{/each}}"
{{/if}}
{{#each items}}{{#if (eq system.category "offensive")}}{{#if (or (me-HTMLtoYAML system.description.value this) system.actions.value)}}
  - name: "{{#if flags.core.sourceId}}[[{{flags.core.sourceId}}|{{{name}}}]]{{else}}{{{name}}}{{/if}}"
    desc: "{{#if system.actions.value}}{{{more-handlebars-helpers-table system.actions.value "1" "`pf2:1`" "2" "`pf2:2`" "3" "`pf2:3`" "reaction" "`pf2:r`" "free" "`pf2:0`"}}}{{else}}{{#if (eq system.actionType.value 'reaction')}}`pf2:r`{{/if}}{{/if}} {{#if system.traits.value}}({{system.traits.value}}){{/if}} {{{me-HTMLtoYAML system.description.value this}}}"
{{/if}}{{/if}}{{/each}} 
```

{{#if system.details.blurb}}
{{{me-HTMLtoMarkdown system.details.blurb system}}}{{/if}}

{{#if system.details.publicNotes}}
{{{me-HTMLtoMarkdown system.details.publicNotes system}}}{{/if}}
