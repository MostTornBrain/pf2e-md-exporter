{{!-- This handlebar is a modified version of one from Josh P.  It will handle Monsters exported from Foundry.  It relies on two modules, PF2E Exporter and More Handlebars Helpers. --}}
{{!-- me-debugDumpObject "Monster JSON" --}}
---
title: "{{{name}}}"
obsidianUIMode: preview
noteType: pf2eMonster
cssClasses: pf2e
aliases: "{{{uuid}}}" 
tags:
{{#each system.traits.value}}
  - pf2e/creature/type/{{this}}
{{/each}}
  - pf2e/creature/level/{{system.details.level.value}}
{{#if system.details.publication.remaster}}
  - remaster
{{/if~}}
statblock: inline
name: "{{name}}"
level: {{system.details.level.value}}
license: {{system.details.publication.license}}
---

```statblock
layout: Experimental Pathfinder 2e Layout
{{#if this.img_path}}
token: {{this.img_path}}
{{/if}}
sourcebook: "{{system.details.publication.title}}"
name: "{{{name}}}"
level: Creature {{system.details.level.value}}
rarity: {{system.traits.rarity}}
alignment: {{more-handlebars-helpers-table system.details.alignment.value "LG" "Lawful Good" "LN" "Lawful Neutral" "LE" "Lawful Evil" "NG" "Neutral Good" "N" "Neutral" "NE" "Neutral Evil" "CG" "Chaotic Good" "CN" "Chaotic Neutral" "CE" "Chaotic Evil"}}
size: {{more-handlebars-helpers-table system.traits.size.value "ti" "Tiny" "sm" "Small" "med" "Medium" "lg" "Large" "hu" "Huge" "ga" "Gargantuan"}}
{{#if system.traits.value}}
traits:
{{#each system.traits.value as |trait|}}
  - {{trait}}
{{/each}} 
{{/if}}

modifier: {{system.perception.value}}
{{#if system.perception.senses}}
senses: {{#each system.perception.senses as |sense|}}{{sense.label}}{{ifThen @last "" ", "}}{{/each}}
{{/if}}
{{#if (or system.details.languages.value system.details.languages.details)}}
languages: "{{#each system.details.languages.value as |language|}}{{capitalize language}}{{ifThen @last "" ", "}}{{/each}}{{#if system.details.languages.details}}{{#if system.details.languages.value}}; {{/if}}{{system.details.languages.details}}{{/if}}"
{{/if}}
{{#if (me-getItemsByType items "lore")}}
skills:
{{#each (me-getItemsByType items "lore")}}
  - "{{{name}}}": {{#if system.variants.0.label}}"{{system.mod.value}} ({{system.variants.0.label}})"{{else}}{{system.mod.value}}{{/if}}
{{/each}}
{{/if}}
abilityMods: [{{system.abilities.str.mod}}, {{system.abilities.dex.mod}}, {{system.abilities.con.mod}}, {{system.abilities.int.mod}}, {{system.abilities.wis.mod}}, {{system.abilities.cha.mod}}]
speed: {{#if system.attributes.speed.value}}{{system.attributes.speed.value}} feet{{#if system.attributes.speed.otherSpeeds}}, {{/if}}{{/if}}{{#each system.attributes.speed.otherSpeeds}} {{type}} {{value}} feet{{ifThen @last "" ", "}}{{/each}}

ac: {{system.attributes.ac.value}}
{{#if system.attributes.ac.details}}
acNote: {{system.attributes.ac.details}}
{{/if}}
saves:
  - fort: {{system.saves.fortitude.value}}
  - ref: {{system.saves.reflex.value}}
  - will: {{system.saves.will.value}}
{{#if system.attributes.allSaves.value}}
savesNote: {{system.attributes.allSaves.value}}
{{/if}}
hp: {{system.attributes.hp.value}}
{{#if system.attributes.hp.details}}
hpNote: {{system.attributes.hp.details}}
{{/if}}
{{#if system.attributes.hardness.value}}
hardness: {{system.attributes.hardness.value}}
{{/if}}
{{#if system.attributes.immunities}}
immunities: "{{#each system.attributes.immunities}}{{label}}{{ifThen @last "" ", "}}{{/each}}"
{{/if}}
{{#if system.attributes.weaknesses}}
weaknesses: "{{#each system.attributes.weaknesses}}{{label}}{{ifThen @last "" ", "}}{{/each}}"
{{/if}}
{{#if system.attributes.resistances}}
resistances: "{{#each system.attributes.resistances}}{{label}}{{ifThen @last "" ", "}}{{/each}}"
{{/if}}

{{#if (me-equipmentList items)}}
items: "{{#each (me-equipmentList items)}}{{{this}}}{{ifThen @last '' ', '}}{{/each}}"
{{/if}}

{{#with (me-getAbilities items "top")}}
abilities_top:
{{#each this}}
  - name: "{{#if flags.core.sourceId}}[[{{flags.core.sourceId}}|{{{name}}}]]{{else}}{{{name}}}{{/if}}"
    desc: "{{#with (me-actionIcon system.actions.value system.actionType.value)}}{{this}} {{/with}}{{#if system.traits.value}}({{system.traits.value}}) {{/if}}{{{me-HTMLtoYAML system.description.value this}}}"
{{/each}}{{/with~}}
{{#with (me-getAbilities items "mid")}}
abilities_mid:
{{#each this}}
  - name: "{{#if flags.core.sourceId}}[[{{flags.core.sourceId}}|{{{name}}}]]{{else}}{{{name}}}{{/if}}"
    desc: "{{#with (me-actionIcon system.actions.value system.actionType.value)}}{{this}} {{/with}}{{#if system.traits.value}}({{system.traits.value}}) {{/if}}{{{me-HTMLtoYAML system.description.value this}}}"
{{/each}}{{/with~}}
{{#with (me-getAbilities items "bot")}}
abilities_bot:
{{#each this}}
  - name: "{{#if flags.core.sourceId}}[[{{flags.core.sourceId}}|{{{name}}}]]{{else}}{{{name}}}{{/if}}"
    desc: "{{#with (me-actionIcon system.actions.value system.actionType.value)}}{{this}} {{/with}}{{#if system.traits.value}}({{system.traits.value}}) {{/if}}{{{me-HTMLtoYAML system.description.value this}}}"
{{/each}}{{/with~}}

{{#with (me-getItemsByType items "melee")}}
attacks:
{{#each this}}
  - name: ___{{#if this.isRanged}}Ranged{{else}}Melee{{/if}}___ â¬» {{name}}
    bonus: {{system.bonus.value}}
    desc: "({{#each system.traits.value}}{{lower (me-trait this)}}{{ifThen @last "" ", "}}{{/each}})"
    damage: "{{#each system.damageRolls}}{{{damage}}} {{damageType}}{{#if ../system.attackEffects.value}} plus {{../system.attackEffects.value}}{{/if}}{{ifThen @last "" " "}}{{/each}}"
{{/each}}{{/with}}

{{~#if (or (me-getItemsByType items "spellcastingEntry") (me-getRituals items))}}
spellcasting:
{{#each (me-getItemsByType items "spellcastingEntry") as |item|}}
  - name: "{{item.name}}"
    desc: "{{#if (eq item.system.prepared.value 'focus')}}{{@root.system.resources.focus.value}} Focus Point{{#if (gt @root.system.resources.focus.value 1)}}s{{/if}}, {{/if}}DC {{item.system.spelldc.dc}}, attack {{numberFormat item.system.spelldc.value sign=true}};
      {{~#each (me-spellLevels @root.items item.id 'spells') as |level|}}__{{ordinal level}} __ {{me-getSpellSlotCount item level}} {{#each (me-getSpellList @root.items item.id level 'spells')}}_{{{this}}}_{{ifThen @last '' ', '}}{{/each}}{{ifThen @last '' '; '}}{{/each}}
      {{~#if (me-spellLevels @root.items item.id 'cantrips')}}\n__Cantrips__ {{#each (me-spellLevels @root.items item.id 'cantrips') as |level|}} __({{ordinal level}})__ {{#each (me-getSpellList @root.items item.id level 'cantrips')}}_{{{this}}}_{{#if system.location.uses.value}} (x{{system.location.uses.value}}){{/if}}{{ifThen @last '' ', '}}{{/each}}{{/each}}{{/if}}
      {{~#if (me-spellLevels @root.items item.id 'constant')}}\n__Constant__ {{#each (me-spellLevels @root.items item.id 'constant') as |level|}} __({{ordinal level}})__ {{#each (me-getSpellList @root.items item.id level 'constant')}}_{{{this}}}_{{#if system.location.uses.value}} (x{{system.location.uses.value}}){{/if}}{{ifThen @last '' ', '}}{{/each}}{{/each}}{{/if}}"
{{/each}}{{~#if (me-getRituals items)}}
  - name: "Rituals"
    desc: "{{#each (me-getRituals items)}}_{{{this}}}_{{ifThen @last '' ', '}}{{/each}}"
{{/if}}{{/if}}
```

{{#if this.include_initiative}}
```encounter-table
name: {{{name}}}
creatures:
  - 1: {{{name}}}
```

{{/if}}{{#if system.details.blurb}}
{{{me-HTMLtoMarkdown system.details.blurb system}}}{{/if}}

{{#if system.details.publicNotes}}
{{{me-HTMLtoMarkdown system.details.publicNotes system}}}{{/if}}